version: 2
jobs:
  build:
    working_directory: ~/circleci-koademo
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: |
            npm i
      - save_cache:
          key: dependency-cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - 'node_modules'
      - run:
          name: Lint
          command: |
            npm run lint
      - run: 
          name: Coverage
          command: |
            export NODE_ENV=production
            npm run coverage
      - run: 
          name: Coverage report
          command: |
            export NODE_ENV=production
            npm run coverage-report
      - run:
          name: Build docker image
          command: |
            docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
            docker build -t $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CIRCLE_BUILD_NUM .
            docker push $DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CIRCLE_BUILD_NUM
      - run:
          name: code-coverage
          command: |
              mkdir coverage
              # nyc report requires that nyc has already been run,
              # which creates the .nyc_output folder containing necessary data
              ./node_modules/.bin/nyc report --reporter=text-lcov > coverage/lcov.info
              ./cc-test-reporter after-build -t lcov
          when: always
      - store_artifacts:
          path: ./coverage/lcov.info
          prefix: tests
#   deploy:
#     docker:
#       - image: buildpack-deps:trusty
#     steps:
#       - checkout
#       - run:
#           name: Deploy to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master